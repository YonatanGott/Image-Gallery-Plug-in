{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\godin\\\\Documents\\\\ITC\\\\Nodejs\\\\Image-Gallery-Plug-in\\\\src\\\\components\\\\MyGallery.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Container, Grid, FormControl, TextField, Button, Paper, Modal, LinearProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport SlideshowIcon from \"@material-ui/icons/Slideshow\";\nimport PageItems from \"./PageItems\";\nimport SortImages from './SortImages';\nimport GalleryCard from './GalleryCard';\nimport GalleryCarousel from './GalleryCarousel'; // Component Styling\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    marginTop: \"1.5rem\"\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"rgba(245, 245, 245, 0.8)\"\n  },\n  gallery: {\n    marginTop: \"1.5rem\"\n  },\n  error: {\n    backgroundColor: \"FireBrick\",\n    marginTop: \"1.5rem\",\n    marginBottom: \"1.5rem\",\n    fontSize: \"1.5rem\",\n    padding: \"1rem\"\n  },\n  searchButton: {\n    marginLeft: \"1rem\",\n    padding: \"0.5rem\"\n  },\n  formSearch: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  slidesButton: {\n    padding: \"0.5rem\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n}); // Main Component\n\nconst MyGallery = props => {\n  _s();\n\n  const classes = useStyles();\n  const [imagesArray, setImagesArray] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [currentArray, setCurrentArray] = useState([]);\n  const [sort, setSort] = useState(\"\");\n  const [intResults] = useState(props.results || 10);\n  const [pageItems, setPageItems] = useState(10);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [pageArray, setPageArray] = useState([]);\n  const [openSlides, setOpenSlides] = useState(false);\n  const [pageNums, setPageNums] = useState(10);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [showSearch, setShowSearch] = useState(true);\n  const [showSort, setShowSort] = useState(true);\n  const [showPagination, setShowPagination] = useState(true);\n  const [blackList, setBlackList] = useState([]);\n  const [autoPlay, setAutoPlay] = useState(true);\n  const [interval] = useState(props.interval * 1000);\n  const [imageIndex, setImageIndex] = useState(0); // Shows Carousel indicators\n\n  const [indicators] = useState(false); // On Rendering\n\n  useEffect(() => {\n    // function to fetch images array from an api\n    // const fetchFeed = async () => {\n    //     try {\n    //         setLoading(true);\n    //         const res = await fetch(props.feed, {\n    //             headers: {\n    //                 \"Content-Type\": \"application/json\",\n    //                 Accept: \"application/json\",\n    //             },\n    //         });\n    //         const images = await res.json();\n    //         initialArrays(images);\n    //     } catch (error) {\n    //         console.log(error);\n    //         setError(\"No Images To Display\");\n    //     }\n    // };\n    //fetchFeed();\n    // function for local json file \n    const getLocalImages = () => {\n      const images = props.feed;\n      initialArrays(images);\n    };\n\n    getLocalImages();\n\n    if (props.search === false) {\n      setShowSearch(false);\n    }\n\n    if (props.sorting === false) {\n      setShowSort(false);\n    }\n\n    if (props.pagination === false) {\n      setShowPagination(false);\n    }\n  }, [props.feed, intResults, props.search, props.sorting, props.pagination]); // Pagination\n\n  const handleChangePage = (event, value) => {\n    setLoading(true);\n    setCurrentPage(value);\n    const indexOfLastImage = value * pageItems;\n    const indexOfFirstImage = indexOfLastImage - pageItems;\n    let imgArray = currentArray.slice(indexOfFirstImage, indexOfLastImage);\n    setPageArray(imgArray);\n    setLoading(false);\n  }; // Repeat Functions\n\n\n  const pageNumbers = (array, items) => {\n    let pages = Math.ceil(array.length / items);\n    setPageNums(pages);\n    setCurrentPage(1);\n  };\n\n  const initialArrays = images => {\n    if (images) {\n      // Get Items from localStorage and remove them from images array\n      let deletedItems = localStorage.getItem(\"BlackList\");\n      let blackArray = JSON.parse(deletedItems);\n\n      if (blackArray) {\n        setBlackList(blackArray);\n\n        for (let i = 0; i < images.length; i++) {\n          if (blackArray.indexOf(images[i].url) !== -1) {\n            images.splice(i, 1);\n          }\n        }\n      }\n\n      let intArray = images.slice(0, intResults);\n      setPageArray(intArray);\n      pageNumbers(images, intResults);\n      setImagesArray(images);\n      setCurrentArray(images);\n      setLoading(false);\n    } else {\n      setError(\"No Images\");\n    }\n  }; //  # Components functions\n  // Search Page\n\n\n  const handleChangeSearch = e => {\n    let replace = e.target.value;\n    let typeReg = new RegExp(replace, \"i\");\n    setSearchInput(typeReg);\n  };\n\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    let imgArray = imagesArray.filter(image => image.title.search(searchInput) !== -1);\n    setCurrentArray(imgArray);\n    let searchArray = imgArray.slice(0, pageItems);\n    setPageArray(searchArray);\n    pageNumbers(imgArray, pageItems);\n    setLoading(false);\n  }; // Sort Images\n\n\n  const handleChangeSort = e => {\n    setLoading(true);\n    setSort(e.target.value);\n\n    if (e.target.value === \"title\") {\n      let sortArray = currentArray.sort((a, b) => a.title > b.title ? 1 : b.title > a.title ? -1 : 0);\n      setCurrentArray(sortArray);\n      let imgArray = currentArray.slice(0, pageItems);\n      setPageArray(imgArray);\n      setCurrentPage(1);\n    } else if (e.target.value === \"date\") {\n      let sortArray = currentArray.sort((a, b) => a.date > b.date ? 1 : b.date > a.date ? -1 : 0);\n      setCurrentArray(sortArray);\n      let imgArray = currentArray.slice(0, pageItems);\n      setPageArray(imgArray);\n      setCurrentPage(1);\n    }\n\n    setLoading(false);\n  }; // Items per Page\n\n\n  const handleChangePageItems = e => {\n    setLoading(true);\n    let imgArray = currentArray.slice(0, e.target.value);\n    setPageArray(imgArray);\n    setPageItems(e.target.value);\n    pageNumbers(currentArray, e.target.value);\n    setLoading(false);\n  }; // SlideShow\n\n\n  const handleOpenSlides = () => {\n    setOpenSlides(true);\n  };\n\n  const SlideShow = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      open: openSlides,\n      onClose: handleClose,\n      className: classes.modal,\n      children: /*#__PURE__*/_jsxDEV(GalleryCarousel, {\n        imageArray: currentArray,\n        autoPlay: autoPlay,\n        indicators: indicators,\n        index: imageIndex,\n        interval: interval\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this);\n  }; // Modal\n\n\n  const handleOpen = e => {\n    let imageUrl = e.target.src;\n\n    for (let i = 0; i < currentArray.length; i++) {\n      if (imageUrl === currentArray[i].url) {\n        let index = i;\n        setImageIndex(index);\n      }\n    }\n\n    setOpenSlides(true);\n    setAutoPlay(false);\n  };\n\n  const handleClose = () => {\n    setOpenSlides(false);\n    setImageIndex(0);\n  };\n\n  const handleDelete = e => {\n    let url = e.currentTarget.value;\n    blackList.push(url);\n    localStorage.setItem(\"BlackList\", JSON.stringify(blackList));\n\n    for (let i = 0; i < currentArray.length; i++) {\n      if (url === currentArray[i].url) {\n        let index = i;\n        let pageIndex = i - (currentPage - 1) * pageItems;\n        currentArray.splice(index, 1);\n        let indexOfFirstImage = index - pageIndex;\n        let indexOfLastImage = indexOfFirstImage + pageItems;\n        let imgArray = currentArray.slice(indexOfFirstImage, indexOfLastImage);\n        setPageArray(imgArray);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      direction: \"column\",\n      justify: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        children: [showSearch && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            className: classes.formControl,\n            onSubmit: handleSearchSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSearchSubmit,\n              className: classes.formSearch,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"search-input\",\n                label: \"Search by Title\",\n                variant: \"outlined\",\n                onChange: handleChangeSearch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.searchButton,\n                variant: \"outlined\",\n                type: \"submit\",\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }, this), showSort && /*#__PURE__*/_jsxDEV(SortImages, {\n          sort: sort,\n          handleChangeSort: handleChangeSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(PageItems, {\n          handleChangePageItems: handleChangePageItems,\n          pageItems: pageItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"large\",\n            color: \"primary\",\n            onClick: handleOpenSlides,\n            variant: \"outlined\",\n            className: classes.slidesButton,\n            children: /*#__PURE__*/_jsxDEV(SlideshowIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        className: classes.gallery,\n        children: error ? /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.error,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 25\n        }, this) : loading ? /*#__PURE__*/_jsxDEV(LinearProgress, {\n          className: classes.loader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 25\n        }, this) : pageArray.map((image, index) => {\n          return /*#__PURE__*/_jsxDEV(GalleryCard, {\n            index: index,\n            image: image,\n            handleOpen: handleOpen,\n            handleDelete: handleDelete\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 44\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this), showPagination && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          count: pageNums,\n          page: currentPage,\n          variant: \"outlined\",\n          shape: \"rounded\",\n          onChange: handleChangePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SlideShow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyGallery, \"vAZIYBYnG8QAFsIUf4ddXOVntRI=\", false, function () {\n  return [useStyles];\n});\n\n_c = MyGallery;\nexport default MyGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyGallery\");","map":{"version":3,"sources":["C:/Users/godin/Documents/ITC/Nodejs/Image-Gallery-Plug-in/src/components/MyGallery.js"],"names":["useEffect","useState","Container","Grid","FormControl","TextField","Button","Paper","Modal","LinearProgress","makeStyles","Pagination","SlideshowIcon","PageItems","SortImages","GalleryCard","GalleryCarousel","useStyles","root","flexGrow","marginTop","modal","display","alignItems","justifyContent","backgroundColor","gallery","error","marginBottom","fontSize","padding","searchButton","marginLeft","formSearch","slidesButton","MyGallery","props","classes","imagesArray","setImagesArray","searchInput","setSearchInput","currentArray","setCurrentArray","sort","setSort","intResults","results","pageItems","setPageItems","setError","loading","setLoading","pageArray","setPageArray","openSlides","setOpenSlides","pageNums","setPageNums","currentPage","setCurrentPage","showSearch","setShowSearch","showSort","setShowSort","showPagination","setShowPagination","blackList","setBlackList","autoPlay","setAutoPlay","interval","imageIndex","setImageIndex","indicators","getLocalImages","images","feed","initialArrays","search","sorting","pagination","handleChangePage","event","value","indexOfLastImage","indexOfFirstImage","imgArray","slice","pageNumbers","array","items","pages","Math","ceil","length","deletedItems","localStorage","getItem","blackArray","JSON","parse","i","indexOf","url","splice","intArray","handleChangeSearch","e","replace","target","typeReg","RegExp","handleSearchSubmit","preventDefault","filter","image","title","searchArray","handleChangeSort","sortArray","a","b","date","handleChangePageItems","handleOpenSlides","SlideShow","handleClose","handleOpen","imageUrl","src","index","handleDelete","currentTarget","push","setItem","stringify","pageIndex","formControl","loader","map"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport {\r\n    Container,\r\n    Grid,\r\n    FormControl,\r\n    TextField,\r\n    Button,\r\n    Paper,\r\n    Modal,\r\n    LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport SlideshowIcon from \"@material-ui/icons/Slideshow\";\r\nimport PageItems from \"./PageItems\";\r\nimport SortImages from './SortImages';\r\nimport GalleryCard from './GalleryCard';\r\nimport GalleryCarousel from './GalleryCarousel';\r\n\r\n// Component Styling\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n        marginTop: \"1.5rem\",\r\n    },\r\n    modal: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"rgba(245, 245, 245, 0.8)\",\r\n    },\r\n    gallery: {\r\n        marginTop: \"1.5rem\",\r\n    },\r\n    error: {\r\n        backgroundColor: \"FireBrick\",\r\n        marginTop: \"1.5rem\",\r\n        marginBottom: \"1.5rem\",\r\n        fontSize: \"1.5rem\",\r\n        padding: \"1rem\",\r\n    },\r\n    searchButton: {\r\n        marginLeft: \"1rem\",\r\n        padding: \"0.5rem\",\r\n    },\r\n    formSearch: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n    },\r\n    slidesButton: {\r\n        padding: \"0.5rem\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n    },\r\n});\r\n// Main Component\r\nconst MyGallery = (props) => {\r\n    const classes = useStyles();\r\n    const [imagesArray, setImagesArray] = useState([]);\r\n    const [searchInput, setSearchInput] = useState(\"\");\r\n    const [currentArray, setCurrentArray] = useState([]);\r\n    const [sort, setSort] = useState(\"\");\r\n    const [intResults] = useState(props.results || 10);\r\n    const [pageItems, setPageItems] = useState(10);\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [pageArray, setPageArray] = useState([]);\r\n    const [openSlides, setOpenSlides] = useState(false);\r\n    const [pageNums, setPageNums] = useState(10);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [showSearch, setShowSearch] = useState(true);\r\n    const [showSort, setShowSort] = useState(true);\r\n    const [showPagination, setShowPagination] = useState(true);\r\n    const [blackList, setBlackList] = useState([]);\r\n    const [autoPlay, setAutoPlay] = useState(true);\r\n    const [interval] = useState(props.interval * 1000);\r\n    const [imageIndex, setImageIndex] = useState(0);\r\n    // Shows Carousel indicators\r\n    const [indicators] = useState(false);\r\n\r\n    // On Rendering\r\n    useEffect(() => {\r\n        // function to fetch images array from an api\r\n        // const fetchFeed = async () => {\r\n        //     try {\r\n        //         setLoading(true);\r\n        //         const res = await fetch(props.feed, {\r\n        //             headers: {\r\n        //                 \"Content-Type\": \"application/json\",\r\n        //                 Accept: \"application/json\",\r\n        //             },\r\n        //         });\r\n        //         const images = await res.json();\r\n        //         initialArrays(images);\r\n        //     } catch (error) {\r\n        //         console.log(error);\r\n        //         setError(\"No Images To Display\");\r\n        //     }\r\n        // };\r\n        //fetchFeed();\r\n\r\n        // function for local json file \r\n        const getLocalImages = () => {\r\n            const images = props.feed;\r\n            initialArrays(images);\r\n        }\r\n        getLocalImages();\r\n        if (props.search === false) {\r\n            setShowSearch(false);\r\n        }\r\n        if (props.sorting === false) {\r\n            setShowSort(false);\r\n        }\r\n        if (props.pagination === false) {\r\n            setShowPagination(false);\r\n        }\r\n    }, [props.feed, intResults, props.search, props.sorting, props.pagination]);\r\n\r\n    // Pagination\r\n    const handleChangePage = (event, value) => {\r\n        setLoading(true);\r\n        setCurrentPage(value);\r\n        const indexOfLastImage = value * pageItems;\r\n        const indexOfFirstImage = indexOfLastImage - pageItems;\r\n        let imgArray = currentArray.slice(indexOfFirstImage, indexOfLastImage);\r\n        setPageArray(imgArray);\r\n        setLoading(false);\r\n    };\r\n    // Repeat Functions\r\n    const pageNumbers = (array, items) => {\r\n        let pages = Math.ceil(array.length / items);\r\n        setPageNums(pages);\r\n        setCurrentPage(1);\r\n    };\r\n    const initialArrays = (images) => {\r\n        if (images) {\r\n            // Get Items from localStorage and remove them from images array\r\n            let deletedItems = localStorage.getItem(\"BlackList\");\r\n            let blackArray = JSON.parse(deletedItems);\r\n            if (blackArray) {\r\n                setBlackList(blackArray);\r\n                for (let i = 0; i < images.length; i++) {\r\n                    if (blackArray.indexOf(images[i].url) !== -1) {\r\n                        images.splice(i, 1);\r\n                    }\r\n                }\r\n            }\r\n            let intArray = images.slice(0, intResults);\r\n            setPageArray(intArray);\r\n            pageNumbers(images, intResults);\r\n            setImagesArray(images);\r\n            setCurrentArray(images);\r\n            setLoading(false);\r\n        }\r\n        else {\r\n            setError(\"No Images\")\r\n        }\r\n    }\r\n\r\n    //  # Components functions\r\n\r\n    // Search Page\r\n    const handleChangeSearch = (e) => {\r\n        let replace = e.target.value;\r\n        let typeReg = new RegExp(replace, \"i\");\r\n        setSearchInput(typeReg);\r\n    };\r\n    const handleSearchSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        let imgArray = imagesArray.filter(\r\n            (image) => image.title.search(searchInput) !== -1\r\n        );\r\n        setCurrentArray(imgArray);\r\n        let searchArray = imgArray.slice(0, pageItems);\r\n        setPageArray(searchArray);\r\n        pageNumbers(imgArray, pageItems);\r\n        setLoading(false);\r\n    };\r\n    // Sort Images\r\n    const handleChangeSort = (e) => {\r\n        setLoading(true);\r\n        setSort(e.target.value);\r\n        if (e.target.value === \"title\") {\r\n            let sortArray = currentArray.sort((a, b) =>\r\n                a.title > b.title ? 1 : b.title > a.title ? -1 : 0\r\n            );\r\n            setCurrentArray(sortArray);\r\n            let imgArray = currentArray.slice(0, pageItems);\r\n            setPageArray(imgArray);\r\n            setCurrentPage(1);\r\n        } else if (e.target.value === \"date\") {\r\n            let sortArray = currentArray.sort((a, b) =>\r\n                a.date > b.date ? 1 : b.date > a.date ? -1 : 0\r\n            );\r\n            setCurrentArray(sortArray);\r\n            let imgArray = currentArray.slice(0, pageItems);\r\n            setPageArray(imgArray);\r\n            setCurrentPage(1);\r\n        }\r\n        setLoading(false);\r\n    };\r\n    // Items per Page\r\n    const handleChangePageItems = (e) => {\r\n        setLoading(true);\r\n        let imgArray = currentArray.slice(0, e.target.value);\r\n        setPageArray(imgArray);\r\n        setPageItems(e.target.value);\r\n        pageNumbers(currentArray, e.target.value);\r\n        setLoading(false);\r\n    };\r\n    // SlideShow\r\n    const handleOpenSlides = () => {\r\n        setOpenSlides(true);\r\n    };\r\n    const SlideShow = () => {\r\n        return (\r\n            <Modal open={openSlides} onClose={handleClose} className={classes.modal}>\r\n                <GalleryCarousel\r\n                    imageArray={currentArray}\r\n                    autoPlay={autoPlay}\r\n                    indicators={indicators}\r\n                    index={imageIndex}\r\n                    interval={interval}\r\n                />\r\n            </Modal>\r\n        );\r\n    }\r\n    // Modal\r\n    const handleOpen = (e) => {\r\n        let imageUrl = e.target.src;\r\n        for (let i = 0; i < currentArray.length; i++) {\r\n            if (imageUrl === currentArray[i].url) {\r\n                let index = i;\r\n                setImageIndex(index);\r\n            }\r\n        }\r\n        setOpenSlides(true)\r\n        setAutoPlay(false);\r\n    };\r\n    const handleClose = () => {\r\n        setOpenSlides(false);\r\n        setImageIndex(0);\r\n    };\r\n\r\n    const handleDelete = (e) => {\r\n        let url = e.currentTarget.value;\r\n        blackList.push(url);\r\n        localStorage.setItem(\"BlackList\", JSON.stringify(blackList));\r\n        for (let i = 0; i < currentArray.length; i++) {\r\n            if (url === currentArray[i].url) {\r\n                let index = i;\r\n                let pageIndex = i - (currentPage - 1) * pageItems;\r\n                currentArray.splice(index, 1);\r\n                let indexOfFirstImage = index - pageIndex;\r\n                let indexOfLastImage = indexOfFirstImage + pageItems;\r\n                let imgArray = currentArray.slice(indexOfFirstImage, indexOfLastImage);\r\n                setPageArray(imgArray);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container className={classes.root}>\r\n            <Grid\r\n                container\r\n                spacing={2}\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    {showSearch && (\r\n                        <Grid item xs>\r\n                            <FormControl\r\n                                variant=\"outlined\"\r\n                                className={classes.formControl}\r\n                                onSubmit={handleSearchSubmit}\r\n                            >\r\n                                <form onSubmit={handleSearchSubmit} className={classes.formSearch}>\r\n                                    <TextField\r\n                                        id=\"search-input\"\r\n                                        label=\"Search by Title\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={handleChangeSearch}\r\n                                    />\r\n                                    <Button className={classes.searchButton} variant=\"outlined\" type=\"submit\">\r\n                                        Search\r\n                                    </Button>\r\n                                </form>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    )}\r\n                    {showSort && (\r\n                        <SortImages sort={sort} handleChangeSort={handleChangeSort} />\r\n                    )}\r\n                    <PageItems handleChangePageItems={handleChangePageItems} pageItems={pageItems} />\r\n                    <Grid item xs={2}>\r\n                        <Button size=\"large\" color=\"primary\" onClick={handleOpenSlides} variant=\"outlined\" className={classes.slidesButton} >\r\n                            <SlideshowIcon />\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    className={classes.gallery}\r\n                >\r\n                    {error ? (\r\n                        <Paper className={classes.error}>{error}</Paper>\r\n                    ) : loading ? (\r\n                        <LinearProgress className={classes.loader} />\r\n                    ) : (\r\n                                pageArray.map((image, index) => {\r\n                                    return <GalleryCard key={index} index={index} image={image} handleOpen={handleOpen} handleDelete={handleDelete} />;\r\n                                })\r\n                            )}\r\n                </Grid>\r\n                {showPagination && (\r\n                    <Grid item xs>\r\n                        <Pagination\r\n                            count={pageNums}\r\n                            page={currentPage}\r\n                            variant=\"outlined\"\r\n                            shape=\"rounded\"\r\n                            onChange={handleChangePage}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            <SlideShow />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default MyGallery;\r\n"]},"metadata":{},"sourceType":"module"}